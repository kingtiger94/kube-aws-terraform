#!/bin/bash -e
#
# Init variables and sanity checks

# Remove quotes
TF_REMOTE_STATE_BUCKET=${TF_REMOTE_STATE_BUCKET%%\"}
TF_REMOTE_STATE_BUCKET=${TF_REMOTE_STATE_BUCKET##\"}
TF_REMOTE_STATE_PATH=${TF_REMOTE_STATE_PATH%%\"}
TF_REMOTE_STATE_PATH=${TF_REMOTE_STATE_PATH##\"}
TF_REQUIRED_VERSION=${TF_REQUIRED_VERSION%%\"}
TF_REQUIRED_VERSION=${TF_REQUIRED_VERSION##\"}
TF_REMOTE_STATE_REGION=${TF_REMOTE_STATE_REGION%%\"}
TF_REMOTE_STATE_REGION=${TF_REMOTE_STATE_REGION##\"}
AWS_PROFILE=${AWS_PROFILE%%\"}
AWS_PROFILE=${AWS_PROFILE##\"}
AWS_REGION=${AWS_REGION%%\"}
AWS_REGION=${AWS_REGION##\"}
AWS_ROLE_ARN=${AWS_ROLE_ARN%%\"}
AWS_ROLE_ARN=${AWS_ROLE_ARN##\"}
TF_MAX_RETRIES=${TF_MAX_RETRIES%%\"}
TF_MAX_RETRIES=${TF_MAX_RETRIES##\"}

ALLOW_SSH_CIDR="$(curl -s http://ipinfo.io/ip)/32"

cat <<EOF
# Generated by scripts/gen-provider.sh
terraform {
  required_version = "${TF_REQUIRED_VERSION}"
  backend "s3" {
    bucket = "${TF_REMOTE_STATE_BUCKET}"
    key    = "${TF_REMOTE_STATE_PATH}"
    region = "${TF_REMOTE_STATE_REGION}"
    encrypt = "true"
    role_arn = "${AWS_ROLE_ARN}"
  }
}

provider "aws" {
  profile = "$AWS_PROFILE"
  max_retries = "$TF_MAX_RETRIES"
  region = "$AWS_REGION"
  assume_role {
    role_arn = "${AWS_ROLE_ARN}"
  }
EOF
if [ ! -z $ALLOWED_ACCOUNT_IDS ]; then
    echo  \ \ allowed_account_ids = [ "$ALLOWED_ACCOUNT_IDS" ]
elif [[ ! -z $FORBIDDEN_ACCOUNT_IDS ]]; then
    echo  \ \ forbidden_account_ids = [ "$FORBIDDEN_ACCOUNT_IDS" ]
fi
cat <<EOF
}
variable "aws_account" {
  default = {
    id = "$AWS_ACCOUNT"
    default_region = "$AWS_REGION"
    profile = "$AWS_PROFILE"
    role_arn = "${AWS_ROLE_ARN}"
  }
}
EOF
